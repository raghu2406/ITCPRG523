package assignment3;

import java.io.File;
import java.util.List;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.Scanner;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Halady Raghavendra Prabhu
 * Student ID S10075084
 */
public class ResultsTable extends javax.swing.JFrame {

    
    /**
     * Creates new form resultsTable
     */
    public ResultsTable() {
//        this.achievementsArr = new ArrayList <Achievement>();
        initComponents();
        resultsTable = (DefaultTableModel) rTable.getModel();
    }
    
    CreatePDF pdfFrame = new CreatePDF(); 
    File file; 
//    ArrayList <Achievement> achievementsArr = null;
    Player player;
    DefaultTableModel resultsTable;
    String fileName;
    public void getFileName(String fileName) {
      this.fileName = fileName;
        try {
            file = new File(fileName);
            Scanner reader = new Scanner(file);
            while(reader.hasNextLine()) {
                String tempLine = reader.nextLine();
                if(tempLine.trim().toLowerCase().contains("player")) {
                    String tokens[] = tempLine.split(",");
                    player = new Player(tokens[1],tokens[2]);
                } else if(tempLine.trim().toLowerCase().contains("achievement")) {
                    String tokens[] = tempLine.split(",");
                    this.player.arr.add(new Achievement(tokens[1],tokens[2],tokens[3]));
                }
        }
        populateTable();
        reader.close();
      } catch (Exception e) {
          e.printStackTrace();
      }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        achievementLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rTable = new javax.swing.JTable();
        refreshButton = new javax.swing.JButton();
        createPDF = new javax.swing.JButton();
        pdfCreated = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Result Table");

        achievementLabel.setText("jLabel2");

        rTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Description", "Level", "Out of possible"
            }
        ));
        jScrollPane1.setViewportView(rTable);

        refreshButton.setText("Refresh");
        refreshButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshButtonMouseClicked(evt);
            }
        });

        createPDF.setText("Create PDF");
        createPDF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createPDFMouseClicked(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(achievementLabel)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(pdfCreated, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(refreshButton)
                                .addGap(32, 32, 32)
                                .addComponent(createPDF)
                                .addGap(27, 27, 27)
                                .addComponent(closeButton)))
                        .addGap(0, 49, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(achievementLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshButton)
                    .addComponent(createPDF)
                    .addComponent(closeButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pdfCreated, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void refreshButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshButtonMouseClicked
        // TODO add your handling code here:

        int size = this.player.arr.size();
        this.player.arr.removeAll(player.arr);
        for(int i = 0; i < size; i++) {
            ((DefaultTableModel)rTable.getModel()).removeRow(0);
        }
        this.getFileName(this.fileName);
    }//GEN-LAST:event_refreshButtonMouseClicked

    private void createPDFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createPDFMouseClicked
        this.pdfFrame.createPDF(this.player);
        this.pdfFrame.setVisible(true);
        
    }//GEN-LAST:event_createPDFMouseClicked

    private void closeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseClicked
       System.exit(0);
    }//GEN-LAST:event_closeButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultsTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultsTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultsTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultsTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResultsTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel achievementLabel;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton createPDF;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel pdfCreated;
    private javax.swing.JTable rTable;
    private javax.swing.JButton refreshButton;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        Collections.sort(this.player.arr, new SortByLevel());
        achievementLabel.setText(player.toString() + " at " + new SimpleDateFormat("dd/MM/yy HH:mm:ss").format(new Date()));
        for(int i = 0; i < this.player.arr.size(); i++) {
            Achievement temp = this.player.arr.get(i);
            resultsTable.addRow(new Object[] {temp.getDescription(), temp.getLevel(), temp.getOutOfPossible()});
        }
    }
}

class SortByLevel implements Comparator<Achievement> 
{ 
    // Used for sorting in ascending order of 
    // roll number 
    public int compare(Achievement a, Achievement b) 
    { 
        return b.getLevel().compareTo( a.getLevel()); 
    } 
} 
